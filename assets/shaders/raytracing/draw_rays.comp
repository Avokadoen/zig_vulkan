#version 450

#extension GL_EXT_debug_printf : disable
// debugPrintfEXT("hello world %f", 1.0);

#include "ray_commons.glsl"

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

const uint DRAW_OP_DRAW_MISS = 1;
const uint DRAW_OP_DRAW_HIT = 2;

layout (push_constant) readonly uniform PushConstants {
    uint draw_op;
} push_constant;


layout(rgba16f, set = 0, binding = 0) uniform image2D img_output;

layout (std430, set = 1, binding = 0) readonly buffer HitLimitBuffer {
    HitLimits limits;
};
layout (std430, set = 2, binding = 0) readonly buffer RayShadingBuffer {
    RayShading ray_shadings[];
};

void main() {
    uint index;
    uint index_limit;

    if (push_constant.draw_op == DRAW_OP_DRAW_MISS) {
        index = gl_GlobalInvocationID.x + limits.out_hit_count;
        index_limit = limits.in_hit_count;
    } else if (push_constant.draw_op == DRAW_OP_DRAW_HIT) {
        index = gl_GlobalInvocationID.x;
        index_limit = limits.out_hit_count;
    } else {
        return; 
    }

    if (index >= index_limit) {
        return;
    }

    const RayShading ray_shading = ray_shadings[index];
    const ivec2 pixel_coord = ivec2(
        bitfieldExtract(ray_shading.pixel_coord, 16, 16),
        bitfieldExtract(ray_shading.pixel_coord, 0, 16)
    );

    vec4 color = imageLoad(img_output, pixel_coord);
    imageStore(img_output, pixel_coord, color + vec4(ray_shading.color, 1.0));
}

