#version 450

#extension GL_EXT_debug_printf : disable
// debugPrintfEXT("hello world %f", 1.0);

// This extension is strictly not required for vulkan 1.2 target, but is used to silence validator...
#extension GL_GOOGLE_include_directive : enable
#include "ray_commons.glsl"

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z = 1) in;

layout(Rgba8, binding = 0) uniform writeonly image2D img_output;

layout (set = 0, binding = 1) buffer CursorBuffer
{
    RayBufferCursor cursor;
};
layout (set = 0, binding = 2) readonly buffer HitBuffer {
    HitRecord hit_records[];
};

shared int warp_start_index;

void main() {
    if (gl_LocalInvocationIndex == 0) {
        const int work_size = int(gl_WorkGroupSize.x * gl_WorkGroupSize.y * gl_WorkGroupSize.z);
        warp_start_index = work_size * atomicAdd(cursor.cursor, -1);
    }
    barrier();
    const int hit_record_index = warp_start_index + int(gl_LocalInvocationIndex);
    if (hit_record_index < 0 || hit_record_index > cursor.max_index) return;

    const HitRecord hit_record = hit_records[hit_record_index];
    const ivec2 pixel_coord = ivec2(
        bitfieldExtract(hit_record.pixel_coord, 16, 16),
        bitfieldExtract(hit_record.pixel_coord, 0, 16)
    );
    imageStore(img_output, pixel_coord, vec4(hit_record.previous_color, 1.0));
}
